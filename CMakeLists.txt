cmake_minimum_required(VERSION 3.11.0)
if(UNIX)
    set(CMAKE_C_COMPILER /usr/bin/gcc)
    set(CMAKE_CXX_COMPILER /usr/bin/g++)

    set(CMAKE_CXX_FLAGS_DEBUG_INIT "-Wall -Wextra -fsanitize=address -g -O2")
    set(CMAKE_CXX_FLAGS_RELEASE_INIT "-O2")

    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -static-libgcc")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -static-libgcc -static-libstdc++")
    set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "${CMAKE_SHARED_LIBRARY_LINK_C_FLAGS} -static-libgcc -s")
    set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "${CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS} -static-libgcc -static-libstdc++ -s")
else(WIN32)
    set(CMAKE_C_COMPILER x86_64-w64-mingw32-gcc.exe)
    set(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++.exe)

    set(CMAKE_CXX_FLAGS_DEBUG_INIT "-Wall -Wextra -g -O2")
    set(CMAKE_CXX_FLAGS_RELEASE_INIT "-O2")

    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -static-libgcc")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++")
    set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "${CMAKE_SHARED_LIBRARY_LINK_C_FLAGS} -static-libgcc -s")
    set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "${CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS} -static-libgcc -static-libstdc++ -s")
endif()
set(CMAKE_CXX_STANDARD 20)
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    project(debug__route_finder)
    if(UNIX)
        add_link_options(-fsanitize=address)
    endif()
else()
    project(route_finder)
endif()
include_directories(${PROJECT_SOURCE_DIR}/src)
add_subdirectory(matplotplusplus)
file(GLOB_RECURSE SOURCES ${PROJECT_SOURCE_DIR}/src/*.cpp)
add_executable(${PROJECT_NAME} ${SOURCES})
target_link_libraries(${PROJECT_NAME} PUBLIC matplot)